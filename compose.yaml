services:
  web-client:
    platform: linux/amd64
    image: bryanmylee/multiplayer-base-web-client
    build:
      dockerfile: build/web/Dockerfile
    ports:
      - 10443:9000
    depends_on:
      authentication:
        condition: service_started
      matchmaking:
        condition: service_started

  authentication:
    platform: linux/amd64
    image: bryanmylee/multiplayer-base-authentication
    build:
      context: authentication
      target: final
    secrets:
      - postgres-url
      - identity-secret
      - identity-refresh-secret
      - server-oauth-client-id
      - server-oauth-client-secret
      - steam-web-api-key
    environment:
      POSTGRES_URL_FILE: /run/secrets/postgres-url
      IDENTITY_SECRET_FILE: /run/secrets/identity-secret
      IDENTITY_EXPIRES_IN_SECS: 3600
      REFRESH_SECRET_FILE: /run/secrets/identity-refresh-secret
      REFRESH_EXPIRES_IN_DAYS: 7
      ALLOWED_ORIGINS: ${ALLOWED_ORIGINS}
      OAUTH_CLIENT_ID_FILE: /run/secrets/server-oauth-client-id
      OAUTH_CLIENT_SECRET_FILE: /run/secrets/server-oauth-client-secret
      STEAM_APP_ID: ${STEAM_APP_ID}
      STEAM_WEB_API_KEY_FILE: /run/secrets/steam-web-api-key
    ports:
      - 18000:8000

  matchmaking:
    platform: linux/amd64
    image: bryanmylee/multiplayer-base-matchmaking
    build:
      context: matchmaking
      target: final
    secrets:
      - postgres-url
      - game-server-manager-service-key
      - identity-secret
      - identity-refresh-secret
    environment:
      POSTGRES_URL_FILE: /run/secrets/postgres-url
      # TODO: use public/private signing for the JWT claims.
      IDENTITY_SECRET_FILE: /run/secrets/identity-secret
      IDENTITY_EXPIRES_IN_SECS: 3600
      REFRESH_SECRET_FILE: /run/secrets/identity-refresh-secret
      REFRESH_EXPIRES_IN_DAYS: 7
      ALLOWED_ORIGINS: ${ALLOWED_ORIGINS}
      GAME_SERVER_EXTERNAL_HOST: ${GAME_SERVER_EXTERNAL_HOST}
      GAME_SERVER_MANAGER_URL: http://game-server-manager:8200
      GAME_SERVER_MANAGER_SERVICE_KEY_FILE: /run/secrets/game-server-manager-service-key
      SOLO_GAME_MIN_SIZE: ${SOLO_GAME_MIN_SIZE}
      SOLO_GAME_DESIRED_SIZE: ${SOLO_GAME_DESIRED_SIZE}
      SOLO_QUEUE_DESIRED_MAX_WAIT_SECS: ${SOLO_QUEUE_DESIRED_MAX_WAIT_SECS}
    ports:
      - 18100:8100
    depends_on:
      game-server-manager:
        condition: service_started

  game-server-manager:
    platform: linux/amd64
    image: bryanmylee/multiplayer-base-game-server-manager
    build:
      dockerfile: game-server-manager/Dockerfile
      target: final
    secrets:
      - game-server-manager-service-key
    environment:
      SERVICE_KEY_FILE: /run/secrets/game-server-manager-service-key
    expose:
      - 8200
    ports:
      - 19000-19049:9000-9049

secrets:
  postgres-url:
    file: secrets/postgres-url.txt
  identity-secret:
    file: secrets/identity-secret.txt
  identity-refresh-secret:
    file: secrets/identity-refresh-secret.txt
  server-oauth-client-id:
    file: secrets/server-oauth-client-id.txt
  server-oauth-client-secret:
    file: secrets/server-oauth-client-secret.txt
  steam-web-api-key:
    file: secrets/steam-web-api-key.txt
  game-server-manager-service-key:
    file: secrets/game-server-manager-service-key.txt
